#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceOrdersWebApplication.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TopazGeneral")]
	public partial class GLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSUPPLIER(SUPPLIER instance);
    partial void UpdateSUPPLIER(SUPPLIER instance);
    partial void DeleteSUPPLIER(SUPPLIER instance);
    partial void InsertCOMPANYPROFILE(COMPANYPROFILE instance);
    partial void UpdateCOMPANYPROFILE(COMPANYPROFILE instance);
    partial void DeleteCOMPANYPROFILE(COMPANYPROFILE instance);
    #endregion
		
		public GLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TopazGeneralConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SUPPLIER> SUPPLIERs
		{
			get
			{
				return this.GetTable<SUPPLIER>();
			}
		}
		
		public System.Data.Linq.Table<COMPANYPROFILE> COMPANYPROFILEs
		{
			get
			{
				return this.GetTable<COMPANYPROFILE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUPPLIER")]
	public partial class SUPPLIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private int _CurrencyID;
		
		private short _SupplierGroupID;
		
		private short _StatusID;
		
		private string _SupplierAccountNumer;
		
		private decimal _SupplierCreditLimit;
		
		private string _SupplierCreditTerms;
		
		private string _SupplierMemo;
		
		private string _SupplierName;
		
		private string _CreatedBy;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<decimal> _Balance;
		
		private int _DebitGL;
		
		private int _CreditGL;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _VATGLNo;
		
		private System.Nullable<int> _IRSGLNo;
		
		private string _TaxPayerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnSupplierGroupIDChanging(short value);
    partial void OnSupplierGroupIDChanged();
    partial void OnStatusIDChanging(short value);
    partial void OnStatusIDChanged();
    partial void OnSupplierAccountNumerChanging(string value);
    partial void OnSupplierAccountNumerChanged();
    partial void OnSupplierCreditLimitChanging(decimal value);
    partial void OnSupplierCreditLimitChanged();
    partial void OnSupplierCreditTermsChanging(string value);
    partial void OnSupplierCreditTermsChanged();
    partial void OnSupplierMemoChanging(string value);
    partial void OnSupplierMemoChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnDebitGLChanging(int value);
    partial void OnDebitGLChanged();
    partial void OnCreditGLChanging(int value);
    partial void OnCreditGLChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnVATGLNoChanging(System.Nullable<int> value);
    partial void OnVATGLNoChanged();
    partial void OnIRSGLNoChanging(System.Nullable<int> value);
    partial void OnIRSGLNoChanged();
    partial void OnTaxPayerIDChanging(string value);
    partial void OnTaxPayerIDChanged();
    #endregion
		
		public SUPPLIER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierGroupID", DbType="SmallInt NOT NULL")]
		public short SupplierGroupID
		{
			get
			{
				return this._SupplierGroupID;
			}
			set
			{
				if ((this._SupplierGroupID != value))
				{
					this.OnSupplierGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierGroupID = value;
					this.SendPropertyChanged("SupplierGroupID");
					this.OnSupplierGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="SmallInt NOT NULL")]
		public short StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAccountNumer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierAccountNumer
		{
			get
			{
				return this._SupplierAccountNumer;
			}
			set
			{
				if ((this._SupplierAccountNumer != value))
				{
					this.OnSupplierAccountNumerChanging(value);
					this.SendPropertyChanging();
					this._SupplierAccountNumer = value;
					this.SendPropertyChanged("SupplierAccountNumer");
					this.OnSupplierAccountNumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCreditLimit", DbType="Money NOT NULL")]
		public decimal SupplierCreditLimit
		{
			get
			{
				return this._SupplierCreditLimit;
			}
			set
			{
				if ((this._SupplierCreditLimit != value))
				{
					this.OnSupplierCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._SupplierCreditLimit = value;
					this.SendPropertyChanged("SupplierCreditLimit");
					this.OnSupplierCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCreditTerms", DbType="VarChar(800)")]
		public string SupplierCreditTerms
		{
			get
			{
				return this._SupplierCreditTerms;
			}
			set
			{
				if ((this._SupplierCreditTerms != value))
				{
					this.OnSupplierCreditTermsChanging(value);
					this.SendPropertyChanging();
					this._SupplierCreditTerms = value;
					this.SendPropertyChanged("SupplierCreditTerms");
					this.OnSupplierCreditTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierMemo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SupplierMemo
		{
			get
			{
				return this._SupplierMemo;
			}
			set
			{
				if ((this._SupplierMemo != value))
				{
					this.OnSupplierMemoChanging(value);
					this.SendPropertyChanging();
					this._SupplierMemo = value;
					this.SendPropertyChanged("SupplierMemo");
					this.OnSupplierMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitGL", DbType="Int NOT NULL")]
		public int DebitGL
		{
			get
			{
				return this._DebitGL;
			}
			set
			{
				if ((this._DebitGL != value))
				{
					this.OnDebitGLChanging(value);
					this.SendPropertyChanging();
					this._DebitGL = value;
					this.SendPropertyChanged("DebitGL");
					this.OnDebitGLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditGL", DbType="Int NOT NULL")]
		public int CreditGL
		{
			get
			{
				return this._CreditGL;
			}
			set
			{
				if ((this._CreditGL != value))
				{
					this.OnCreditGLChanging(value);
					this.SendPropertyChanging();
					this._CreditGL = value;
					this.SendPropertyChanged("CreditGL");
					this.OnCreditGLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATGLNo", DbType="Int")]
		public System.Nullable<int> VATGLNo
		{
			get
			{
				return this._VATGLNo;
			}
			set
			{
				if ((this._VATGLNo != value))
				{
					this.OnVATGLNoChanging(value);
					this.SendPropertyChanging();
					this._VATGLNo = value;
					this.SendPropertyChanged("VATGLNo");
					this.OnVATGLNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IRSGLNo", DbType="Int")]
		public System.Nullable<int> IRSGLNo
		{
			get
			{
				return this._IRSGLNo;
			}
			set
			{
				if ((this._IRSGLNo != value))
				{
					this.OnIRSGLNoChanging(value);
					this.SendPropertyChanging();
					this._IRSGLNo = value;
					this.SendPropertyChanged("IRSGLNo");
					this.OnIRSGLNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPayerID", DbType="NVarChar(50)")]
		public string TaxPayerID
		{
			get
			{
				return this._TaxPayerID;
			}
			set
			{
				if ((this._TaxPayerID != value))
				{
					this.OnTaxPayerIDChanging(value);
					this.SendPropertyChanging();
					this._TaxPayerID = value;
					this.SendPropertyChanged("TaxPayerID");
					this.OnTaxPayerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPANYPROFILE")]
	public partial class COMPANYPROFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CompanyName;
		
		private string _CompanyAddress;
		
		private string _CompanyDBA;
		
		private string _CityID;
		
		private int _CountryID;
		
		private string _CompanyNumber;
		
		private string _CompanyEmployerSSN;
		
		private System.Nullable<int> _CurrencyID;
		
		private string _CompanyFirstMoOfYear;
		
		private string _CompanyCurrencyStock;
		
		private System.Nullable<bool> _CompanyConsolidateTSheet;
		
		private string _CompanyVatNo;
		
		private string _CompanyVat;
		
		private string _CompanyTelephone;
		
		private string _CompanyFax;
		
		private string _CompanyEmail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyDBAChanging(string value);
    partial void OnCompanyDBAChanged();
    partial void OnCityIDChanging(string value);
    partial void OnCityIDChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCompanyNumberChanging(string value);
    partial void OnCompanyNumberChanged();
    partial void OnCompanyEmployerSSNChanging(string value);
    partial void OnCompanyEmployerSSNChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnCompanyFirstMoOfYearChanging(string value);
    partial void OnCompanyFirstMoOfYearChanged();
    partial void OnCompanyCurrencyStockChanging(string value);
    partial void OnCompanyCurrencyStockChanged();
    partial void OnCompanyConsolidateTSheetChanging(System.Nullable<bool> value);
    partial void OnCompanyConsolidateTSheetChanged();
    partial void OnCompanyVatNoChanging(string value);
    partial void OnCompanyVatNoChanged();
    partial void OnCompanyVatChanging(string value);
    partial void OnCompanyVatChanged();
    partial void OnCompanyTelephoneChanging(string value);
    partial void OnCompanyTelephoneChanged();
    partial void OnCompanyFaxChanging(string value);
    partial void OnCompanyFaxChanged();
    partial void OnCompanyEmailChanging(string value);
    partial void OnCompanyEmailChanged();
    #endregion
		
		public COMPANYPROFILE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyDBA", DbType="VarChar(50)")]
		public string CompanyDBA
		{
			get
			{
				return this._CompanyDBA;
			}
			set
			{
				if ((this._CompanyDBA != value))
				{
					this.OnCompanyDBAChanging(value);
					this.SendPropertyChanging();
					this._CompanyDBA = value;
					this.SendPropertyChanged("CompanyDBA");
					this.OnCompanyDBAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyNumber", DbType="VarChar(50)")]
		public string CompanyNumber
		{
			get
			{
				return this._CompanyNumber;
			}
			set
			{
				if ((this._CompanyNumber != value))
				{
					this.OnCompanyNumberChanging(value);
					this.SendPropertyChanging();
					this._CompanyNumber = value;
					this.SendPropertyChanged("CompanyNumber");
					this.OnCompanyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmployerSSN", DbType="VarChar(50)")]
		public string CompanyEmployerSSN
		{
			get
			{
				return this._CompanyEmployerSSN;
			}
			set
			{
				if ((this._CompanyEmployerSSN != value))
				{
					this.OnCompanyEmployerSSNChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmployerSSN = value;
					this.SendPropertyChanged("CompanyEmployerSSN");
					this.OnCompanyEmployerSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyFirstMoOfYear", DbType="VarChar(50)")]
		public string CompanyFirstMoOfYear
		{
			get
			{
				return this._CompanyFirstMoOfYear;
			}
			set
			{
				if ((this._CompanyFirstMoOfYear != value))
				{
					this.OnCompanyFirstMoOfYearChanging(value);
					this.SendPropertyChanging();
					this._CompanyFirstMoOfYear = value;
					this.SendPropertyChanged("CompanyFirstMoOfYear");
					this.OnCompanyFirstMoOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCurrencyStock", DbType="VarChar(50)")]
		public string CompanyCurrencyStock
		{
			get
			{
				return this._CompanyCurrencyStock;
			}
			set
			{
				if ((this._CompanyCurrencyStock != value))
				{
					this.OnCompanyCurrencyStockChanging(value);
					this.SendPropertyChanging();
					this._CompanyCurrencyStock = value;
					this.SendPropertyChanged("CompanyCurrencyStock");
					this.OnCompanyCurrencyStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyConsolidateTSheet", DbType="Bit")]
		public System.Nullable<bool> CompanyConsolidateTSheet
		{
			get
			{
				return this._CompanyConsolidateTSheet;
			}
			set
			{
				if ((this._CompanyConsolidateTSheet != value))
				{
					this.OnCompanyConsolidateTSheetChanging(value);
					this.SendPropertyChanging();
					this._CompanyConsolidateTSheet = value;
					this.SendPropertyChanged("CompanyConsolidateTSheet");
					this.OnCompanyConsolidateTSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyVatNo", DbType="VarChar(50)")]
		public string CompanyVatNo
		{
			get
			{
				return this._CompanyVatNo;
			}
			set
			{
				if ((this._CompanyVatNo != value))
				{
					this.OnCompanyVatNoChanging(value);
					this.SendPropertyChanging();
					this._CompanyVatNo = value;
					this.SendPropertyChanged("CompanyVatNo");
					this.OnCompanyVatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyVat", DbType="VarChar(50)")]
		public string CompanyVat
		{
			get
			{
				return this._CompanyVat;
			}
			set
			{
				if ((this._CompanyVat != value))
				{
					this.OnCompanyVatChanging(value);
					this.SendPropertyChanging();
					this._CompanyVat = value;
					this.SendPropertyChanged("CompanyVat");
					this.OnCompanyVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTelephone", DbType="VarChar(50)")]
		public string CompanyTelephone
		{
			get
			{
				return this._CompanyTelephone;
			}
			set
			{
				if ((this._CompanyTelephone != value))
				{
					this.OnCompanyTelephoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyTelephone = value;
					this.SendPropertyChanged("CompanyTelephone");
					this.OnCompanyTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyFax", DbType="VarChar(50)")]
		public string CompanyFax
		{
			get
			{
				return this._CompanyFax;
			}
			set
			{
				if ((this._CompanyFax != value))
				{
					this.OnCompanyFaxChanging(value);
					this.SendPropertyChanging();
					this._CompanyFax = value;
					this.SendPropertyChanged("CompanyFax");
					this.OnCompanyFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmail", DbType="VarChar(50)")]
		public string CompanyEmail
		{
			get
			{
				return this._CompanyEmail;
			}
			set
			{
				if ((this._CompanyEmail != value))
				{
					this.OnCompanyEmailChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmail = value;
					this.SendPropertyChanged("CompanyEmail");
					this.OnCompanyEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
